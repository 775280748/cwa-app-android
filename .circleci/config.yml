version: 2.1
orbs:
  android: circleci/android@0.2.1
  sonarcloud: sonarsource/sonarcloud@1.0.1
commands:
  install-ndk: android/install-ndk
  restore-build-cache: android/restore-build-cache
  save-build-cache: android/save-build-cache
  scan-sonar: sonarcloud/scan
jobs:
  quickBuildReleaseWithTestsAndChecks:
    executor: android/android
    steps:
      - checkout
      - install-ndk:
          ndk-sha: "c81a5bcb4672a18d3647bf6898cd4dbcb978d0e8"
          ndk-version: "android-ndk-r21c"
      - restore-build-cache
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "Corona-Warn-App/build.gradle" }}-{{ checksum  "Server-Protocol-Buffer/build.gradle" }}
      - run:
          name: Quick Build
          command: ./gradlew quickBuild
          environment:
            JVM_OPTS: -Xmx2048m
            GRADLE_OPTS: -Xmx1536m -XX:+HeapDumpOnOutOfMemoryError -Dorg.gradle.caching=true -Dorg.gradle.configureondemand=true -Dkotlin.compiler.execution.strategy=in-process -Dkotlin.incremental=false
      - save-build-cache
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "Corona-Warn-App/build.gradle" }}-{{ checksum  "Server-Protocol-Buffer/build.gradle" }}
      - run:
          name: JaCoCo report
          command: ./gradlew :Corona-Warn-App:jacocoTestReportDeviceRelease
          environment:
            JVM_OPTS: -Xmx2048m
            GRADLE_OPTS: -Xmx1536m -XX:+HeapDumpOnOutOfMemoryError -Dorg.gradle.caching=true -Dorg.gradle.configureondemand=true -Dkotlin.compiler.execution.strategy=in-process -Dkotlin.incremental=false
      - store_artifacts:
          path: Corona-Warn-App/build/reports
          destination: reports
      - store_test_results:
          path: Corona-Warn-App/build/test-results
      - run:
          name: Skip SonarCloud for external Pull Requests
          command: '[[ -v CIRCLE_PR_REPONAME ]] && circleci-agent step halt || true'
      - scan-sonar
  quickBuildReleaseWithTestsAndChecksAndSign:
    executor: android/android
    steps:
      - checkout
      - install-ndk:
          ndk-sha: "c81a5bcb4672a18d3647bf6898cd4dbcb978d0e8"
          ndk-version: "android-ndk-r21c"
      - restore-build-cache
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "Corona-Warn-App/build.gradle" }}-{{ checksum  "Server-Protocol-Buffer/build.gradle" }}
      - run:
          name: Download Keystore
          command: |
            curl --header "Authorization: token $keystore_download_token" --header "Accept: application/vnd.github.v3.raw" --remote-name --location "$keystore_download_url$keystore_download_filename"
      - run:
          name: Decrypt Keystore
          command: openssl enc -aes-256-cbc -d -pbkdf2 -iter 100000 -in $keystore_download_filename -out $keystore_filename -k $keystore_encrypt_key
      - run:
          name: Prepare Gradle For Signing
          command: |
            echo "keystore_filename=$keystore_filename" >> "./gradle.properties"
            echo "keystore_password=$keystore_password" >> "./gradle.properties"
            echo "key_alias=$key_alias" >> "./gradle.properties"
            echo "key_password=$key_password" >> "./gradle.properties"
      - run:
          name: Quick Build
          command: ./gradlew quickBuild
          environment:
            JVM_OPTS: -Xmx2048m
            GRADLE_OPTS: -Xmx1536m -XX:+HeapDumpOnOutOfMemoryError -Dorg.gradle.caching=true -Dorg.gradle.configureondemand=true -Dkotlin.compiler.execution.strategy=in-process -Dkotlin.incremental=false
      - save-build-cache
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "Corona-Warn-App/build.gradle" }}-{{ checksum  "Server-Protocol-Buffer/build.gradle" }}
      - run:
          name: JaCoCo report
          command: ./gradlew :Corona-Warn-App:jacocoTestReportDeviceRelease
          environment:
            JVM_OPTS: -Xmx2048m
            GRADLE_OPTS: -Xmx1536m -XX:+HeapDumpOnOutOfMemoryError -Dorg.gradle.caching=true -Dorg.gradle.configureondemand=true -Dkotlin.compiler.execution.strategy=in-process -Dkotlin.incremental=false
      - store_artifacts:
          path: Corona-Warn-App/build/reports
          destination: reports
      - store_test_results:
          path: Corona-Warn-App/build/test-results
      - run:
          name: Skip SonarCloud for external Pull Requests
          command: '[[ -v CIRCLE_PR_REPONAME ]] && circleci-agent step halt || true'
      - scan-sonar
workflows:
  version: 2
  workflow:
    jobs:
      - quickBuildReleaseWithTestsAndChecks:
          filters:
            branches:
              ignore:
                - staging-pipeline-test
      - quickBuildReleaseWithTestsAndChecksAndSign:
          filters:
            branches:
              only:
                - staging-pipeline-test
